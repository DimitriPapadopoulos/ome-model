<?xml version="1.0" encoding="utf-8"?>
<project name="xsd-fu" default="runall" basedir=".">
  <description>Build file for xsd-fu</description>
  <property name="root.dir" location="../.."/>
  <property name="xsdfu.schemaver" value="2012-06"/>
  <property name="xsdfu.schemapath" value="../specification/released-schema/${xsdfu.schemaver}"/>
  <property name="xsdfu.ome" value="${xsdfu.schemapath}/ome.xsd"/>
  <property name="xsdfu.binaryfile" value="${xsdfu.schemapath}/BinaryFile.xsd"/>
  <property name="xsdfu.roi" value="${xsdfu.schemapath}/ROI.xsd"/>
  <property name="xsdfu.sa" value="${xsdfu.schemapath}/SA.xsd"/>
  <property name="xsdfu.spw" value="${xsdfu.schemapath}/SPW.xsd"/>
  <import file="${root.dir}/ant/java.xml"/>

  <target name="package"><!-- Skip compile -->
    <property name="py.target" value="${basedir}/build/lib"/>
    <mkdir dir="${py.target}"/>
    <setup_py>
      <env key="BF_VERSION" value="${release.version}"/>
      <arg value="build"/>
      <arg value="--build-platlib"/>
      <arg value="${py.target}"/>
      <arg value="--build-purelib"/>
      <arg value="${py.target}"/>
    </setup_py>
    <setup_py>
      <env key="BF_VERSION" value="${release.version}"/>
      <arg value="bdist_egg"/>
      <arg value="--dist-dir"/>
      <arg value="${target.dir}"/>
    </setup_py>
    <move todir="${target.dir}">
      <fileset dir="${target.dir}"/>
      <mapper type="regexp" from="(xsd_fu-.*?)-py(.*?).egg" to="xsd-fu.egg" />
    </move>
  </target>
  <target name="install" depends="package">
    <!-- Defining here to work around jar signing -->
    <publishArtifact/>
  </target>

  <target name="test-compile" description="No-op"/>
  <target name="test" description="No-op"/>
  <target name="integration" description="No-op"/>
  <target name="findbugs" description="No-op"/>

  <target name="runall" depends="run-3to8,run-7to8,run-8to8,run-8to9,run-3to9"/>
  <target name="run-3to8">
    <exec executable="./xslt/xslt-test2003FCTo200809"/>
  </target>
  <target name="run-7to8">
    <exec executable="./xslt/xslt-test200706To200809"/>
  </target>
  <target name="run-8to8">
    <exec executable="./xslt/xslt-test200802To200809"/>
  </target>
  <target name="run-8to9">
    <exec executable="./xslt/xslt-test200809To200909"/>
  </target>
  <target name="run-3to9">
    <exec executable="./xslt/xslt-test2003FCTo200809To200909"/>
  </target>

  <target name="generate-ome-xml">
    <property name="xsdfu.modelpath" value="../ome-xml/build/src/ome/xml/model"/>
    <property name="xsdfu.enumpath" value="../ome-xml/build/src/ome/xml/model/enums"/>
    <property name="xsdfu.handlerpath" value="../ome-xml/build/src/ome/xml/model/enums/handlers"/>

    <!-- Generate the OME model object classes -->
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="java_classes"/>
      <arg value="-p"/>
      <arg value="ome.xml.model"/>
      <arg value="-o"/>
      <arg value="${xsdfu.modelpath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <!-- Generate the OME model enumeration classes -->
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="enum_types"/>
      <arg value="-p"/>
      <arg value="ome.xml.model.enums"/>
      <arg value="-o"/>
      <arg value="${xsdfu.enumpath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <!-- Generate the handlers for the OME model enumeration classes -->
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="enum_handlers"/>
      <arg value="-p"/>
      <arg value="ome.xml.model.enums.handlers"/>
      <arg value="-o"/>
      <arg value="${xsdfu.handlerpath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
  </target>

  <target name="generate-metadata">
    <property name="xsdfu.metadatapath" value="../scifio/build/src/loci/formats/meta"/>

    <!-- Generate the metadata interfaces -->
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="metadata_store"/>
      <arg value="-o"/>
      <arg value="${xsdfu.metadatapath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="metadata_retrieve"/>
      <arg value="-o"/>
      <arg value="${xsdfu.metadatapath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <!-- Generate the metadata implementations -->
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="metadata_aggregate"/>
      <arg value="-o"/>
      <arg value="${xsdfu.metadatapath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="dummy_metadata"/>
      <arg value="-o"/>
      <arg value="${xsdfu.metadatapath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="filter_metadata"/>
      <arg value="-o"/>
      <arg value="${xsdfu.metadatapath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
  </target>

  <target name="generate-ome-xml-metadata">
    <property name="xsdfu.scifiopath" value="../scifio/build/src/loci/formats/ome"/>

    <exec executable="python" failonerror="true">
      <arg value="xsd-fu"/>
      <arg value="omexml_metadata"/>
      <arg value="-o"/>
      <arg value="${xsdfu.scifiopath}/"/>
      <arg value="${xsdfu.ome}"/>
      <arg value="${xsdfu.binaryfile}"/>
      <arg value="${xsdfu.roi}"/>
      <arg value="${xsdfu.sa}"/>
      <arg value="${xsdfu.spw}"/>
    </exec>
  </target>

  <target name="clean" description="Cleans the published schemas and specification jar">
    <delete>
      <fileset dir="xslt" includes="**/*.pyc"/>
      <fileset dir="python" includes="**/*.pyc"/>
    </delete>
  </target>

</project>
