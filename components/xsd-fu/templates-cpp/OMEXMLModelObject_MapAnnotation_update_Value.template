std::vector<common::xml::dom::Element> Value_nodeList(getChildrenByTagName(element, "Value"));
if (Value_nodeList.size() > 1)
  {
    format fmt("Value node list size %1% != 1");
    fmt % Value_nodeList.size();
    throw ModelException(fmt.str());
    // TODO: Should be its own Exception
  }
 else if (Value_nodeList.size() != 0)
   {
     ome::xml::model::primitives::OrderedMultimap map;

     std::vector<common::xml::dom::Element> children(getChildrenByTagName(Value_nodeList.at(0), "M"));
     for (std::vector<common::xml::dom::Element>::iterator elem = children.begin();
          elem != children.end();
          ++elem)
       {
         if (elem->hasAttribute("K"))
           map.get<0>().insert(map.end(),
                               ome::xml::model::primitives::OrderedMultimap::value_type(elem->getAttribute("K"),
                                                                                   elem->getTextContent()));
         else
           {
             BOOST_LOG_SEV(logger, ome::logging::trivial::warning)
               << "MapAnnotation entry M does not contain key attribute K";
           }
       }
     setValue(map);
   }
